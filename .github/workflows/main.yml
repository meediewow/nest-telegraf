name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build_core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create env file
        run: |
          touch .env
          echo BOT_TOKEN=${BOT_TOKEN} > .env
          echo DB_URL=${DB_URL} > .env
          echo CORE_PORT=${CORE_PORT} > .env
          echo CAPTCHA_SERVICE_PORT=${CAPTCHA_SERVICE_PORT} > .env
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          DB_URL: ${{ secrets.DB_URL }}
          CORE_PORT: ${{ secrets.CORE_PORT }}
          CAPTCHA_SERVICE_PORT: ${{ secrets.CAPTCHA_SERVICE_PORT }}
      - name: Build and push core
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: mididevich/floodik:latest
          build-args: |
            SERVICE_NAME=bot-core
            NODE_PORT=${{ secrets.CORE_PORT }}
      - name: Build and push captcha
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: mididevich/captcha-service:latest
          build-args: |
            SERVICE_NAME=captcha
            NODE_PORT=${{ secrets.CAPTCHA_SERVICE_PORT }}
  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Restart docker-compose
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT }}
  #         script: cd docker-compose down && docker-compose pull && docker-compose up -d
